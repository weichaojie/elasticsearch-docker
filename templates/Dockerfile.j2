# This Dockerfile was generated from the template at templates/Dockerfile.j2
{% set ingest_plugins = 'ingest-user-agent ingest-geoip' %}
{% set version_tag = elastic_version -%}
{% set tarball = 'elasticsearch-%s.tar.gz' % elastic_version -%}

{% if artifacts_dir -%}
{%   set url_root = 'http://localhost:8000/elasticsearch/distribution/tar/build/distributions' -%}
{%   set x_pack_url_root = 'http://localhost:8000/x-pack-elasticsearch/plugin/build/distributions' -%}
{%   set plugin_url_root = 'http://localhost:8000/elasticsearch/plugins' -%}
{% elif staging_build_num -%}
{%   set version_tag = version_tag + '-' + staging_build_num -%}
{%   set url_root = 'https://staging.elastic.co/%s/downloads/elasticsearch' % version_tag -%}
{% elif elastic_version.endswith('-SNAPSHOT') -%}
{%   set url_root = 'https://snapshots.elastic.co/downloads/elasticsearch' -%}
{% else -%}
{%   set url_root = 'https://artifacts.elastic.co/downloads/elasticsearch' -%}
{% endif -%}

{# Use a centos base that has openjdk-1.8.0.b141 pre-installed and excluded from yum.conf,
until potential issues with build 144 have been troubleshooted #}
FROM docker.elastic.co/elasticsearch/centos-base:7.3-jvm141
LABEL maintainer "Elastic Docker Team <docker@elastic.co>"

ENV ELASTIC_CONTAINER true
ENV PATH /usr/share/elasticsearch/bin:$PATH
ENV JAVA_HOME /usr/lib/jvm/jre-1.8.0-openjdk

RUN yum update -y && yum install -y java-1.8.0-openjdk-headless unzip wget which && yum clean all

RUN groupadd -g 1000 elasticsearch && adduser -u 1000 -g 1000 -d /usr/share/elasticsearch elasticsearch

WORKDIR /usr/share/elasticsearch

USER 1000

# Download and extract defined ES version.
RUN curl -fsSL {{ url_root }}/{{ tarball }} | \
    tar zx --strip-components=1

RUN set -ex && for esdirs in config data logs; do \
        mkdir -p "$esdirs"; \
    done

# Install x-pack and also the ingest-{agent,geoip} modules required for Filebeat
{% if artifacts_dir -%}
  {% if image_flavor != 'oss' -%}
RUN elasticsearch-plugin install --batch "{{ x_pack_url_root }}/x-pack-{{ elastic_version }}.zip"
  {%- endif %}
RUN for PLUGIN in {{ ingest_plugins }}; do \
      elasticsearch-plugin install --batch "{{ plugin_url_root }}/$PLUGIN/build/distributions/$PLUGIN-{{ elastic_version }}.zip"; \
    done
{% elif staging_build_num -%}
  {% if image_flavor != 'oss' -%}
RUN for PLUGIN in x-pack {{ ingest_plugins }}; do \
  {% else -%}
RUN for PLUGIN in {{ ingest_plugins }}; do \
  {%- endif %}
      eval ES_JAVA_OPTS="-Des.plugins.staging={{ staging_build_num }}" elasticsearch-plugin install --batch "$PLUGIN"; \
    done
{% else -%}
  {% if image_flavor != 'oss' -%}
RUN for PLUGIN in x-pack {{ ingest_plugins }}; do \
  {% else -%}
RUN for PLUGIN in {{ ingest_plugins }}; do \
  {%- endif -%}
      elasticsearch-plugin install --batch "$PLUGIN"; done
{%- endif %}

USER 0

{# A fair bit of duplication here, but making line breaks and '\' consistent
   coupled with jinja2 conditionals is complicated.
-#}

{% if image_flavor == 'oss' -%}
COPY elasticsearch.yml log4j2.properties config/
COPY bin/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh

RUN chown elasticsearch:elasticsearch \
      config/elasticsearch.yml \
      config/log4j2.properties && \
    chgrp -R 0 . /usr/local/bin/docker-entrypoint.sh && \
    chmod -R g=u . && \
    chmod g=u /etc/passwd && \
    chmod 0775 /usr/local/bin/docker-entrypoint.sh
{% elif image_flavor == 'basic' -%}
COPY elasticsearch.yml log4j2.properties config/
RUN echo 'xpack.license.self_generated.type: basic' >>config/elasticsearch.yml
COPY x-pack/log4j2.properties config/x-pack/
COPY bin/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh

# Openshift overrides USER and uses ones with randomly uid>1024 and gid=0
# Allow ES to run even with a different user
RUN chown elasticsearch:elasticsearch \
      config/elasticsearch.yml \
      config/log4j2.properties \
      config/x-pack/log4j2.properties && \
    chgrp -R 0 . /usr/local/bin/docker-entrypoint.sh && \
    chmod -R g=u . && \
    chmod g=u /etc/passwd && \
    chmod 0775 /usr/local/bin/docker-entrypoint.sh
{% elif image_flavor == 'platinum' -%}
COPY elasticsearch.yml certgen_instances.yml log4j2.properties config/
COPY x-pack/log4j2.properties config/x-pack/
COPY bin/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh

RUN echo 'xpack.license.self_generated.type: trial' >>config/elasticsearch.yml

RUN chown elasticsearch:elasticsearch \
      config/certgen_instances.yml \
      config/elasticsearch.yml \
      config/log4j2.properties \
      config/x-pack/log4j2.properties && \
    chgrp -R 0 . /usr/local/bin/docker-entrypoint.sh && \
    chmod -R g=u . && \
    chmod g=u /etc/passwd && \
    chmod 0775 /usr/local/bin/docker-entrypoint.sh

RUN bin/x-pack/certgen -s -in config/certgen_instances.yml --out config/certs.zip && \
    unzip -d config/x-pack/ config/certs.zip && \
    rm config/certs.zip config/certgen_instances.yml
{% endif -%}

EXPOSE 9200 9300

ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
CMD ["eswrapper"]
